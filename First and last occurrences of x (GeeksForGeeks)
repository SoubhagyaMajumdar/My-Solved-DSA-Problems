class Solution
{
    public:
    int first_Occurence(int arr[], int n, int key)
    {
        int s= 0;
        int e= n-1;
        int ans= -1;
        
        while(s<=e)
        {
            int mid=s+(e-s)/2;
            
            if(arr[mid] == key)
            {
                ans = mid;
                e=mid-1;
            }
            else if(arr[mid] > key)
            {
                e=mid-1;
            }
            else
            {
                s=mid+1;
            }
        }
        return ans;
    }
        
    int last_Occurence(int arr[], int n, int key)
    {
        int s=0;
        int e=n-1;
        int ans=-1;
        
        while(s<=e)
        {
            int mid=s+(e-s)/2;
            
            if(arr[mid] == key)
            {
                ans = mid;
                s=mid+1;
            }
            else if(arr[mid] > key)
            {
                e=mid-1;
            }
            else
            {
                s=mid+1;
            }
        }
        return ans;
    }
 
    vector<int> find(int arr[], int n , int x )
    {
        vector<int> Ans;
        Ans.push_back(first_Occurence(arr, n, x));
        Ans.push_back(last_Occurence(arr, n, x));
        
        return Ans;
    }
  
};
